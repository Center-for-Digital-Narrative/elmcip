<?php
/**
 * @file
 * Code for the Setup ELMCIP feature.
 */

include_once 'elmcip_setup.features.inc';

/**
 * Implements hook_block_info().
 */
function elmcip_setup_block_info() {
  $blocks['sosical_networks'] = array(
    'info' => t('Social networks associated with ELMCIP'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'status' => 0,
  );

  $blocks['sponsors'] = array(
    'info' => t('ELMCIP sponsors'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'status' => 0,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function elmcip_setup_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'sosical_networks':
      $content =  array(
        '#type' => 'markup',
        '#markup' => '
        <ul class="menu social">
          <li><a href="https://vimeo.com/elmcip"><i class="fa fa-vimeo-square"></i></a></li>
          <li><a href="https://twitter.com/elmcip"><i class="fa fa-twitter-square"></i></a></li>
          <li><a href="https://www.facebook.com/groups/480202502024095"><i class="fa fa-facebook-square"></i></a></li>
        </ul>',
      );
      $block = array(
        'content' => render($content),
      );
      break;

    case 'sponsors':
      $content =  array(
        '#type' => 'markup',
        '#markup' => '
        <p>
          <map id="sponsorblock" name="sponsorblock">
            <area alt="HERA (Humanities in the European Research Area)" coords="9,16,180,61" href="http://www.heranet.info" shape="rect" target="_blank" title="HERA (Humanities in the European Research Area)">
            <area alt="NorStore" coords="417,19,545,53" href="https://www.norstore.no/" shape="rect" target="_blank" title="NorStore">
            <area alt="CLARINO (Common Language Resources and Technology Infrastructure Norway)" coords="557,20,665,52" href="http://clarin.b.uib.no/" shape="rect" target="_blank" title="CLARINO (Common Language Resources and Technology Infrastructure Norway)">
            <area alt="University of Bergen, Department of Linguistic, Literary and Aesthetic Studies" coords="373,37,33" href="http://www.uib.no/en/lle" shape="circle" target="_blank" title="University of Bergen, Department of Linguistic, Literary and Aesthetic Studies">
            <area alt="Bergen Electronic Literature Research Group" coords="254,77,422,147" href="http://www.uib.no/en/rg/electronicliterature" shape="rect" target="_blank" title="Bergen Electronic Literature Research Group">
            <area alt="European Commission, European Research Area" coords="189,8,331,63" href="http://ec.europa.eu/research/era/index_en.htm" shape="rect" target="_blank" title="European Commission, European Research Area">
          </map>
          <img alt="ELMCIP sponsors" src="/sites/all/themes/elmcip/images/sponsors/elmcip_sponsors.png" usemap="#sponsorblock" />
          <p>
              This Work, ELMCIP, is licensed under a <a href="http://creativecommons.org/licenses/by-sa/2.5/" target="_blank">Creative Commons Attribution-ShareAlike license <img alt="creative commons" src="/sites/all/themes/elmcip/images/sponsors/cc_logo.png" /></a>, although certain works referenced herein may be separately licensed.
          </p>
      </p>',
      );
      $block = array(
        'content' => render($content),
      );
      break;
  }

  return $block;
}

/**
 * Implements hook_node_presave().
 */
function elmcip_setup_node_presave($node) {
  if ($node->type == 'person') {
    $entity_updated = entity_metadata_wrapper('node', $node);
    $nodeTitle = FALSE;
    $firstName = trim($entity_updated->field_first_name->value());
    $middleName = trim($entity_updated->field_middle_name->value());
    $lastName = trim($entity_updated->field_last_name->value());

    if ($firstName) {
      $nodeTitle = $firstName;
      $entity_updated->field_first_name->set($firstName);
    }
    else {
      $entity_updated->field_first_name->set(NULL);
    }

    if ($middleName) {
      if ($firstName) {
        $nodeTitle .= ' ' . $middleName;
      }
      else {
        $nodeTitle = $middleName;
      }
      $entity_updated->field_middle_name->set($middleName);
    }
    else {
      $entity_updated->field_middle_name->set(NULL);
    }

    if ($lastName) {
      if ($firstName || $middleName) {
        $nodeTitle .= ' ' . $lastName;
      }
      else {
        $nodeTitle = $lastName;
      }
      $entity_updated->field_last_name->set($lastName);
    }
    else {
      $entity_updated->field_last_name->set(NULL);
    }

    if ($nodeTitle) {
      $entity_updated->title->set($nodeTitle);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function elmcip_setup_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'person_node_form':
      $form['title']['#type'] = 'hidden';
      $form['title']['#default_value'] = 'ELMCIP auto generated - dummy';
      break;
    case 'taxonomy_form_term':
      $form['description']['#format'] = 4;
      $form['#after_build'][] = 'configure_term_form';
      break;
    case 'work_node_form':
      $form['title']['#description'] = t('Indicate the title of the work. If it has a subtitle, place the subtitle text after a colon.', array('type' => $form['type']['#value']));
      $form['#custom_togle'] = 'field_abstract_lang_tax';
      $form['#custom_field'] = 'field_abstract_lang';
      $form['#validate'][] = 'elmcip_form_validate';
      _elmcip_form_helper($form);
      break;
    case 'critical_writing_node_form':
      $form['title']['#description'] = t('Indicate the title of the work. If it has a subtitle, place the subtitle text after a colon.', array('type' => $form['type']['#value']));
      $form['#custom_togle'] = 'field_abstract_lang_tax';
      $form['#custom_field'] = 'field_abstract_lang';
      $form['#validate'][] = 'elmcip_form_validate';
      _elmcip_form_helper($form);
      break;
    case 'platform_software_node_form':
      $form['title']['#description'] = t('Enter the name of the platform/software.', array('type' => $form['type']['#value']));
      break;
    case 'teaching_resource_node_form':
      $form['title']['#description'] = t('Enter the title of the teaching resource. If the teaching resource is a syllabus for a course, enter the title of the course in the following format: Title: Subtitle (Course number, Semester year). For example, <i>Digital Genres: Digital Art, Electronic Literature, and Computer Games (DIKULT 103, Spring 2011)</i>.', array('type' => $form['type']['#value']));
      $form['#custom_togle'] = 'field_abstract_lang_tax';
      $form['#custom_field'] = 'field_abstract_lang';
      $form['#validate'][] = 'elmcip_form_validate';
      _elmcip_form_helper($form);
      break;
    case 'publisher_node_form':
      $form['title']['#description'] = t('Enter the name of the publisher.', array('type' => $form['type']['#value']));
      break;
    case 'organization_node_form':
      $form['title']['#description'] = t('Enter the name of the organization.', array('type' => $form['type']['#value']));
      break;
    case 'event_node_form':
      $form['title']['#description'] = t('Enter the name of the event.', array('type' => $form['type']['#value']));
      $form['#custom_togle'] = 'field_event_abstract_lang_tax';
      $form['#custom_field'] = 'field_event_abstract_lang';
      $form['#validate'][] = 'elmcip_form_validate';
      _elmcip_form_helper($form);
      break;
    case 'databases_and_archives_node_form':
      $form['title']['#description'] = t('Enter the official name of the database or archive. If the resource is commonly referred to by an acronym (e.g. ELD for the Electronic Literature Directory), this can be specified in description.', array('type' => $form['type']['#value']));
      $form['#custom_togle'] = 'field_db_description_org_lang';
      $form['#custom_field'] = 'field_db_description_original';
      $form['#validate'][] = 'elmcip_form_validate';
      _elmcip_form_helper($form);
      break;
    case 'research_collection_node_form':
      $form['title']['#description'] = t('Create a title for the resource collection', array('type' => $form['type']['#value']));
      break;
  }
}

/**
 * Custom node form validation. Make sure that description or abstract in
 * original language get removed if the language is not set.
 *
 * @param $form
 * @param $form_state
 */
function elmcip_form_validate($form, &$form_state) {
  if (!$form_state['values'][$form['#custom_togle']][LANGUAGE_NONE][0]['tid']) {
    $form_state['values'][$form['#custom_field']][LANGUAGE_NONE][0]['value'] = '';
  }
}

/**
 * ELMCIP helper function. Hide form if the orginal description or abstract
 * language is empty.
 *
 * @param $form
 */
function _elmcip_form_helper(&$form) {
  $form[$form['#custom_field']]['#states'] = array(
    'invisible' => array(
      'select[name="' . $form['#custom_togle'] . '[' . LANGUAGE_NONE . ']' . '"]' => array('value' => '_none'),
    ),
  );
}

/**
 * Implements hook_element_info_alter().
 *
 * @param $type
 */
function elmcip_setup_element_info_alter(&$type) {
  if (isset($type['link_field'])) {
    $type['link_field']['#process'][] = 'elmcip_setup_link_field_process';
  }
}

/**
 * Implements template_link_field_process().
 *
 * @param $element
 *
 * @return mixed $element
 */
function elmcip_setup_link_field_process($element) {
  if ($element['#bundle'] == 'work') {
    if ($element['#field_name'] == 'field_worldcat_link') {
      $element['title']['#title'] = t('Year of publication');
      unset($element['title']['#description']);
    }
  }

  if ($element['#bundle'] == 'critical_writing') {
    if ($element['#field_name'] == 'field_worldcat_link') {
      $element['title']['#title'] = t('Edition year');
      unset($element['title']['#description']);
    }
  }

  if ($element['#bundle'] == 'databases_and_archives') {
    if ($element['#field_name'] == 'field_url') {
      $element['title']['#title'] = t('Name of resource');
    }
  }

  return $element;
}

/**
 * Remove input format selector and markup guidelines.
 *
 * @param $form
 * @return mixed
 */
function configure_term_form($form) {
  $form['description']['format']['format']['#access'] = FALSE;
  $form['description']['format']['help']['#access'] = FALSE;
  $form['description']['format']['guidelines']['#access'] = FALSE;

  return $form;
}

/**
 * Implements hook_field_formatter_info().
 */
function elmcip_setup_field_formatter_info() {
  return array(
    'elmcip_setup_term_name_with_tid' => array(
      'label' => t('Term tid'),
      'field types' => array('taxonomy_term_reference'),
    ),
  );
}

function elmcip_setup_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'elmcip_setup_term_name_with_tid':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#markup' => $item['tid'],
        );
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_menu_alter().
 */
function elmcip_setup_menu_alter(&$items) {
  unset($items['node']); // Remove Drupal hardcoded front page.
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function elmcip_setup_form_node_form_alter(&$form) {
  // Only content type story can be promoted or sticky.
  if ($form['#node']->type !== 'story') {
    $options = array('promote', 'sticky');
    foreach ($options as $key) {
      $form['options'][$key]['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function elmcip_setup_form_node_admin_content_alter(&$form) {
  // Content overview page no longer have these batch options.
  $options = array('demote', 'promote', 'sticky', 'unsticky', );
  foreach ($options as $key) {
    unset($form['admin']['options']['operation']['#options'][$key]);
  }
}
