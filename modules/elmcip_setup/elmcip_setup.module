<?php
/**
 * @file
 * Code for the Setup ELMCIP feature.
 */

include_once 'elmcip_setup.features.inc';

/**
 * Remove temporary index tables from views_export.
 *
 * Temporary index tables that have been left
 * behind. This is caused by batch processes which are
 * started but never finished.
 */
function elmcip_setup_update_7001() {
  if (module_exists('views_data_export')) {
    views_data_export_garbage_collect(0, -1);
  }
}

/**
 * Implements hook_block_info().
 */
function elmcip_setup_block_info() {
  return array('sosical_networks' => array(
    'info' => t('Social networks assosiated with ELMCIP.'),
    'cache' => 'DRUPAL_CACHE_GLOBAL',
    'weight' => 0,
    'status' => 1,
    'region' => 'header_top',
    'theme' => 'elmcip',
  ));
}

/**
 * Implements hook_block_view().
 */
function elmcip_setup_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'sosical_networks':
      $content =  array(
        '#type' => 'markup',
        '#markup' => '
        <ul class="menu social">
          <li><a href="https://vimeo.com/elmcip"><i class="fa fa-vimeo-square"></i></a></li>
          <li><a href="https://twitter.com/elmcip"><i class="fa fa-twitter-square"></i></a></li>
          <li><a href="https://www.facebook.com/groups/480202502024095"><i class="fa fa-facebook-square"></i></a></li>
        </ul>',
      );
      $block = array(
        'content' => render($content),
      );
      return $block;

    default:
      break;
  }

  return $block;
}

/**
 * Implements hook_node_presave().
 */
function elmcip_setup_node_presave($node) {
  if ($node->type == 'person') {
    $entity_updated = entity_metadata_wrapper('node', $node);
    $nodeTitle = FALSE;
    $firstName = trim($entity_updated->field_first_name->value());
    $middleName = trim($entity_updated->field_middle_name->value());
    $lastName = trim($entity_updated->field_last_name->value());

    if ($firstName) {
      $nodeTitle = $firstName;
      $entity_updated->field_first_name->set($firstName);
    }
    else {
      $entity_updated->field_first_name->set(NULL);
    }

    if ($middleName) {
      if ($firstName) {
        $nodeTitle .= ' ' . $middleName;
      }
      else {
        $nodeTitle = $middleName;
      }
      $entity_updated->field_middle_name->set($middleName);
    }
    else {
      $entity_updated->field_middle_name->set(NULL);
    }

    if ($lastName) {
      if ($firstName || $middleName) {
        $nodeTitle .= ' ' . $lastName;
      }
      else {
        $nodeTitle = $lastName;
      }
      $entity_updated->field_last_name->set($lastName);
    }
    else {
      $entity_updated->field_last_name->set(NULL);
    }

    if ($nodeTitle) {
      $entity_updated->title->set($nodeTitle);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function elmcip_setup_form_person_node_form_alter(&$form, &$form_state, $form_id) {
  $form['title']['#type'] = 'hidden';
  $form['title']['#default_value'] = 'ELMCIP auto generated - dummy';
}

/**
 * Implements hook_field_formatter_info().
 */
function elmcip_setup_field_formatter_info() {
  return array(
    'elmcip_setup_term_name_with_tid' => array(
      'label' => t('Term tid'),
      'field types' => array('taxonomy_term_reference'),
    ),
  );
}

function elmcip_setup_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'elmcip_setup_term_name_with_tid':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#markup' => $item['tid'],
        );
      }
      break;
  }

  return $element;
}
