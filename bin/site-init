#!/bin/bash

set -x

SITE=elmcip01.norstore.uio.no
DB_SITE=elmcip02.norstore.uio.no
DRUPAL=drupal
URI=elmcip.dev
HOMEDIR=${PWD}

drush --version || exit $?

# Copy default database settings to Drupal.
if [ -f $DRUPAL/sites/default/settings.php ]; then
    echo "Site already exist. Unable to int. a exiting site."
    exit 1
fi

cp -v site/settings.php $DRUPAL/sites/default || exit 1

# Make sure we are on master branch, production and submodule checked out at the
# production tag.
git checkout master
git pull --rebase --quiet || exit $?
git checkout production --quiet || exit $?
git submodule update --quiet || exit $?

# Sync images and grab nightly backup of production database.
if [ -z "$1" ]
  then
    RESULT=`rsync -L -h --stats --progress --verbose $DB_SITE:/files/latest.elmcip.sql.gz site/`
    if [ $? != 0 ]; then
    {
      echo "ERROR: problem syncing DB"
      echo $RESULT
      exit 1
    }
  fi
  else
    echo "Connecting to $DB_SITE as user: $1"
    RESULT=`rsync -L -h --stats --progress --verbose $1@$DB_SITE:/files/latest.elmcip.sql.gz site/`
    if [ $? != 0 ]; then
    {
      echo "ERROR: problem syncing DB"
      echo $RESULT
      exit 1
    }
  fi
fi

cd $DRUPAL

# Copy sandbox setting file to installation.
gunzip -c ../site/latest.elmcip.sql.gz | drush --uri=$URI sql-cli

# Normalize all synced files and directories to make sure they are locally writable.
cd $HOMEDIR/$DRUPAL/sites/default || exit 1
mkdir files
chmod 777 files

# Flush all drupal caches.
drush updatedb --yes
drush cc all
drush status
